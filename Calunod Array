/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package pkgfinal.array;

import javax.swing.JOptionPane;

/**
 *
 * @author ACER
 */
public class VineFinalArray {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        double[] numbers = {85.5, 3.2, 19.99, 12.5, 4.75, 540};
        String[] options = {"Max", "Min", "Average", "Sum", "Power"};

        JOptionPane.showMessageDialog(null, performOperation(numbers, options));
    }

    static double performOperation(double[] array, String[] options) {
        int choice = JOptionPane.showOptionDialog(
            null,
            "Available options for the array:\n"
                    + " 45.6,  8.4,  23.11,  17.8,  6.55,  320\n" +
            "Please select an option:",
            "Array Operations",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]
        );

        switch (choice) {
            case 0: // Max
                return findMax(array);
            case 1: // Min
                return findMin(array);
            case 2: // Average
                return calculateAverage(array);
            case 3: // Sum
                return calculateSum(array);
            case 4: // Power
                calculatePower();
                return 0; // Power doesn't return a meaningful value here
            default:
                return 0;
        }
    }

    static double findMax(double[] array) {
        double max = array[0];
        for (double num : array) {
            if (num > max) {
                max = num;
            }
        }
        return max;
    }

    static double findMin(double[] array) {
        double min = array[0];
        for (double num : array) {
            if (num < min) {
                min = num;
            }
        }
        return min;
    }

    static double calculateAverage(double[] array) {
        double sum = calculateSum(array);
        return sum / array.length;
    }

    static double calculateSum(double[] array) {
        double sum = 0;
        for (double num : array) {
            sum += num;
        }
        return sum;
    }

    static void calculatePower() {
        double base = Double.parseDouble(JOptionPane.showInputDialog("Enter the base:"));
        double exponent = Double.parseDouble(JOptionPane.showInputDialog("Enter the exponent:"));
        double result = Math.pow(base, exponent);
        JOptionPane.showMessageDialog(null, "Result: " + result);
    }
}

